{
   "swagger":"2.0",
   "info":{
      "description":"Application Assignment: API placing orders and managing products",
      "version":"1.0.0",
      "title":"Products and Orders API",
      "contact":{
         "email":"jeferson.rubert@gmail.com"
      },
      "license":{
         "name":"Apache 2.0",
         "url":"http://www.apache.org/licenses/LICENSE-2.0.html"
      }
   },
   "host":"localhost:8080",
   "basePath":"",
   "tags":[
      {
         "name":"products",
         "description":"Everything about your products"
      },
      {
         "name":"orders",
         "description":"Access and place orders"
      }
   ],
   "schemes":[
      "https",
      "http"
   ],
   "paths":{
        "/products":{
          "post":{
             "tags":[
                "products"
             ],
             "summary":"Add or update a product",
             "description":"Add or update a product <br>
              - a product name is Unique <br>
              - if an Id is supplied, its going to be an update operationId <br>
              - if no Id is supplied then its a insert operation",
             "operationId":"AddOrUpdateProduct",
             "consumes":[
                "application/json"
             ],
             "produces":[
                "application/json"
             ],
             "parameters":[
                {
                   "in":"body",
                   "name":"body",
                   "description":"Product object that needs to be added or updated",
                   "required":true,
                   "schema":{
                      "$ref":"#/definitions/Product"
                   }
                }
             ],
             "responses":{
                 "201":{
                    "description":"Product inserterd",
                    "schema":{
                       "type":"array",
                       "items":{
                          "$ref":"#/definitions/Product"
                       }
                    }
                 },
                 "200":{
                    "description":"Product updated",
                    "schema":{
                       "type":"array",
                       "items":{
                          "$ref":"#/definitions/Product"
                       }
                    }
                 },
                "400":{
                   "description":"Name already exists <br> Price is invalid"
                },
                "404":{
                   "description":"Product not found, for updates"
                }
             }
          },
         "get":{
            "tags":[
               "products"
            ],
            "summary":"Returns a list with all the products",
            "description":"Returns a list with all the products",
            "operationId":"findAllProducts",
            "produces":[
               "application/json"
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "type":"array",
                     "items":{
                        "$ref":"#/definitions/Product"
                     }
                  }
               }
            }
         }
      },
      "/products/{productId}":{
         "get":{
            "tags":[
               "products"
            ],
            "summary":"Find product by ID",
            "description":"Returns a single product",
            "operationId":"getProductById",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"productId",
                  "in":"path",
                  "description":"ID of product to return",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/Product"
                  }
               },
               "404":{
                  "description":"Product not found"
               }
            }
         }
      },
      "/orders":{
         "post":{
            "tags":[
               "orders"
            ],
            "summary":"Place an order",
            "description":"",
            "operationId":"placeOrder",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "description":"order placed for purchasing products<br>
                   - buyer must be a valid e-mail, eg: test@test.com <br>
                   - the productId under the entries must be a valid products",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/OrderPost"
                  }
               }
            ],
            "responses":{
               "201":{
                  "description":"order Placed",
                  "schema":{
                     "$ref":"#/definitions/Order"
                  }
               },
               "400":{
                  "description":"Invalid buyer e-mail, quantity, entries or status"
               },
               "404":{
                  "description":"Product not found"
               }
            }
         },
         "get":{
            "tags":[
               "orders"
            ],
            "summary":"Find purchase order by date range",
            "description":"For valid response use a date on the format 'dd-MM-yyyy HH:mm:ss'<br>
             - startDate must be before endDate.<br>
             - Other values will generate exceptions",
            "operationId":"getOrderByDateInBetween",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"startDate",
                  "in":"path",
                  "description":"startDate of the range to be searched",
                  "required":true,
                  "type":"string",
                  "format":"date-time"
               },
               {
                  "name":"endDate",
                  "in":"path",
                  "description":"endDate of the range to be searched",
                  "required":true,
                  "type":"string",
                  "format":"date-time"
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/Order"
                  }
               },
               "400":{
                  "description":"Invalid date format or invalid range"
               }
            }
         }
      },
      "/products/{productName}":{
         "get":{
            "tags":[
               "products"
            ],
            "summary":"Find product by Name",
            "description":"Returns a single product",
            "operationId":"getProductByName",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"productName",
                  "in":"path",
                  "description":"Name of product to return",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/Product"
                  }
               },
               "404":{
                  "description":"Product not found"
               }
            }
         }
      }
   },
   "definitions":{
      "ApiResponse":{
         "type":"object",
         "properties":{
            "code":{
               "type":"integer",
               "format":"int32"
            },
            "type":{
               "type":"string"
            },
            "message":{
               "type":"string"
            }
         }
      },
      "Product":{
         "type":"object",
         "required":[
            "name",
            "price"
         ],
         "properties":{
            "id":{
               "type":"integer",
               "format":"int64"
            },
            "name":{
               "type":"string",
               "example":"Pen"
            },
            "description":{
               "type":"string",
               "example":"A durable black pen"
            },
            "price":{
               "type":"number",
               "format":"double"
            }
         }
      },
      "OrderEntry":{
         "type":"object",
         "properties":{
            "sequence":{
                "type":"integer",
                "format":"int32"
            },
            "product":{
               "$ref":"#/definitions/Product"
            },
            "quantity":{
               "type":"integer",
               "format":"int32"
            },
            "basePrice":{
               "type":"number",
               "format":"double"
            },
            "totalPrice":{
               "type":"number",
               "format":"double"
            }
         }
      },
      "Order":{
         "type":"object",
         "properties":{
            "id":{
               "type":"integer",
               "format":"int64"
            },
            "buyer":{
               "type":"string",
               "example":"teste@teste.com"
            },
            "entries":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/OrderEntry"
               }
            },
            "status":{
               "type":"string",
               "description":"Order Status",
               "enum":[
                  "placed",
                  "approved",
                  "delivered"
               ]
            },
            "totalPrice":{
               "type":"number",
               "format":"double"
            }

         }
      },
      "OrderPost":{
         "type":"object",
         "required":[
            "buyer",
            "status",
            "entries"
         ],
         "properties":{
           "buyer":{
              "type":"string",
              "example":"teste@teste.com"
           },
            "entries":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/OrderEntryPost"
               }
            },
            "status":{
               "type":"string",
               "description":"Order Status",
               "enum":[
                  "placed",
                  "approved",
                  "delivered"
               ]
            }
         }
      },
      "OrderEntryPost":{
         "type":"object",
         "required":[
            "productId",
            "quantity"
         ],
         "properties":{
            "productId":{
                "type":"integer",
                "format":"int64"
            },
            "quantity":{
               "type":"integer",
               "format":"int32"
            }
         }
      }
   }
}
